{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","api.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","hideDetails","handleShowDetails","setState","event","this","props","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","extractLocations","Set","fetch","then","res","json","catch","result","removeQuery","history","pushState","pathname","newurl","protocol","host","getEvents","token","url","setItem","JSON","stringify","NProgress","done","NumberOfEvents","eventCount","handleNumberChanged","htmlFor","name","placeholder","App","locationEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"iQAwCeA,E,4MAnCbC,MAAQ,CACNC,aAAa,G,EAGfC,kBAAoB,YACa,IAA3B,EAAKF,MAAMC,YACb,EAAKE,SAAS,CAAEF,aAAa,IAE7B,EAAKE,SAAS,CAAEF,aAAa,K,4CAIjC,WAAU,IAAD,OACCG,EAAUC,KAAKC,MAAfF,MACR,OACA,sBAAKG,UAAU,QAAf,UACE,6BAAKH,EAAMI,UACX,4BAAIJ,EAAMK,MAAMC,WAChB,mBAAGH,UAAU,YAAb,SAA0BH,EAAMO,WAE/BN,KAAKL,MAAMC,aACV,sBAAKM,UAAU,mBAAf,UACE,8CACA,mBAAGA,UAAU,cAAcK,KAAMR,EAAMS,SAAvC,4CAGA,4BAAIT,EAAMU,iBAGd,wBAAQP,UAAU,aAAaQ,QAAS,kBAAM,EAAKb,qBAAnD,SAA0EG,KAAKL,MAAMC,YAA+B,eAAjB,wB,GA/BrFe,aCeLC,E,4JAdb,WAAU,IACAC,EAAWb,KAAKC,MAAhBY,OACR,OACE,oBAAIX,UAAU,YAAd,SACGW,EAAOC,KAAI,SAAAf,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMgB,a,GANDJ,aCqDTK,E,4MAnDXrB,MAAQ,CACNsB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGnBC,mBAAqB,SAACtB,GACpB,IAAMuB,EAAQvB,EAAMwB,OAAOD,MACrBJ,EAAc,EAAKjB,MAAMuB,UAAUC,QAAO,SAACnB,GAC/C,OAAOA,EAASoB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,EAAK5B,SAAS,CACZmB,MAAOK,EACPJ,iB,EAIJU,kBAAoB,SAACC,GACnB,EAAK/B,SAAS,CACZmB,MAAOY,EACPV,iBAAiB,IAGnB,EAAKlB,MAAM6B,aAAaD,I,4CAG5B,WAAU,IAAD,OACP,OACE,sBAAK3B,UAAU,aAAf,UACE,uBACA6B,KAAK,OACL7B,UAAU,OACVoB,MAAOtB,KAAKL,MAAMsB,MAClBe,SAAUhC,KAAKqB,mBACfY,QAAS,WAAQ,EAAKnC,SAAS,CAAEqB,iBAAiB,OAElD,qBAAIjB,UAAU,cAAcgC,MAAOlC,KAAKL,MAAMwB,gBAAkB,GAAI,CAAEgB,QAAS,QAA/E,UACGnC,KAAKL,MAAMuB,YAAYJ,KAAI,SAACe,GAAD,OAC1B,oBAEAnB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAFtC,SAEoDA,GAD/CA,MAGP,oBAAInB,QAAS,kBAAM,EAAKkB,kBAAkB,QAA1C,SACE,2D,GA7CajB,a,gECUZyB,EAAc,uCAAG,sCAAAC,EAAA,yDAEtBC,EAAcC,aAAaC,QAAQ,gBAFb,KAGTF,GAHS,qCAGaG,EAAWH,GAHxB,6BAGtBI,EAHsB,KAKvBJ,IAAeI,EAAWC,MALH,kCAMpBJ,aAAaK,WAAW,gBANJ,eAOpBC,EAAe,IAAIC,gBAAgBC,OAAOzC,SAAS0C,QAP/B,UAQPH,EAAaI,IAAI,QARV,WAQpBC,EARoB,yCAUFC,IAAMF,IAC1B,+EAXsB,eAUlBG,EAVkB,OAahBC,EAAYD,EAAQE,KAApBD,QAbgB,kBAchBN,OAAOzC,SAASC,KAAO8C,GAdP,iCAgBnBH,GAAQd,EAAec,IAhBJ,iCAkBrBZ,GAlBqB,4CAAH,qDAqBdiB,EAAmB,SAAC1C,GAC/B,IAAI0C,EAAmB1C,EAAOC,KAAI,SAACf,GAAD,OAAWA,EAAMO,YAEnD,OADa,YAAO,IAAIkD,IAAID,KAIjBd,EAAU,uCAAG,WAAOH,GAAP,eAAAD,EAAA,sEACHoB,MAAM,+DAAD,OACuCnB,IAEhEoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAAClB,GAAD,OAAWA,EAAMiB,UALA,cAClBE,EADkB,yBAOjBA,GAPiB,2CAAH,sDAUVC,EAAc,WACzB,GAAIhB,OAAOiB,QAAQC,WAAalB,OAAOzC,SAAS4D,SAAU,CACxD,IAAIC,EACJpB,OAAOzC,SAAS8D,SAAW,KAAOrB,OAAOzC,SAAS+D,KAClDtB,OAAOzC,SAAS4D,SAChBnB,OAAOiB,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASpB,OAAOzC,SAAS8D,SAAW,KAAOrB,OAAOzC,SAAS+D,KAC3DtB,OAAOiB,QAAQC,UAAU,GAAI,GAAIE,IAoBxBG,EAAS,uCAAG,kCAAAjC,EAAA,sEAQHD,IARG,YAQjBmC,EARiB,gCAWrBR,IACMS,EAAM,6EACVD,EAbmB,SAcApB,IAAMF,IAAIuB,GAdV,cAcfV,EAde,QAeVR,OACL9B,EAAY+B,EAAiBO,EAAOR,KAAKzC,QAC7C0B,aAAakC,QAAQ,aAAcC,KAAKC,UAAUb,EAAOR,OACzDf,aAAakC,QAAQ,YAAaC,KAAKC,UAAUnD,KAEnDoD,IAAUC,OApBW,kBAqBdf,EAAOR,KAAKzC,QArBE,4CAAH,qDC9CPiE,E,4MA5BbnF,MAAQ,CACNoF,WAAY,G,EAGdC,oBAAsB,SAACjF,GACrB,IAAMgF,EAAahF,EAAMwB,OAAOD,MAChC,EAAKxB,SAAS,CACZiF,gB,4CAIJ,WACE,OACE,sBAAK7E,UAAU,iBAAf,UACE,uBAAO+E,QAAQ,kBACf,uBACAlD,KAAK,SACLmD,KAAK,gBACLC,YAAY,yBACZjF,UAAU,cACVoB,MAAOtB,KAAKL,MAAMoF,WAClB/C,SAAUhC,KAAKgF,6B,GAvBMrE,aC6DdyE,E,4MArDbzF,MAAQ,CACNkB,OAAQ,GACRW,UAAW,GACXuD,WAAY,I,EAGdjD,aAAe,SAACxB,EAAUyE,GACxB,IAAIM,EACJf,IAAYZ,MAAK,SAAC7C,GAEdwE,EADe,QAAb/E,EACeO,EAAOyE,MAAM,EAAGP,GAEhBlE,EAAOY,QAAO,SAAC1B,GAAD,OAAWA,EAAMO,WAAaA,KAC5DgF,MAAM,EAAGP,GAEZ,EAAKjF,SAAS,CACZe,OAAQwE,EACRN,mB,uDAKN,WAAqB,IAAD,OAClB/E,KAAKuF,SAAU,EACfjB,IAAYZ,MAAK,SAAC7C,GACZ,EAAK0E,SACT,EAAKzF,SAAS,CAAEe,OAAQA,EAAOyE,MAAM,EAAG,EAAK3F,MAAMoF,YAAavD,UAAW+B,EAAiB1C,U,kCAKhG,WACEb,KAAKuF,SAAU,I,oBAGjB,WACE,OACE,sBAAKrF,UAAU,MAAf,UACE,cAAC,EAAD,CACA4B,aAAc9B,KAAK8B,aACnBiD,WAAY/E,KAAKL,MAAMoF,aAEvB,cAAC,EAAD,CACAvD,UAAWxB,KAAKL,MAAM6B,UACtBM,aAAc9B,KAAK8B,aACnBiD,WAAY/E,KAAKL,MAAMoF,aAEvB,cAAC,EAAD,CAAWlE,OAAQb,KAAKL,MAAMkB,gB,GAjDpBF,aCIE6E,QACW,cAA7BzC,OAAOzC,SAASmF,UAEe,UAA7B1C,OAAOzC,SAASmF,UAEhB1C,OAAOzC,SAASmF,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhD,MAAK,SAACiD,GACLA,EAAaC,gBAEd/C,OAAM,SAAClB,GACNkE,QAAQlE,MAAMA,EAAMmE,YE/G5BnB,M","file":"static/js/main.b2484a08.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass Event extends Component {\n\n  state = {\n    hideDetails: false,\n  };\n\n  handleShowDetails = () => {\n    if (this.state.hideDetails === false) {\n      this.setState({ hideDetails: true });\n    } else {\n      this.setState({ hideDetails: false });\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n    return (\n    <div className=\"Event\">\n      <h1>{event.summary}</h1>\n      <p>{event.start.dateTime}</p>\n      <p className=\"locations\">{event.location}</p>\n\n      {this.state.hideDetails && (\n        <div className=\"detailsCollapsed\">\n          <h1>About Event:</h1>\n          <a className=\"googleEvent\" href={event.htmlLink}>\n            See details on Google Calendar\n          </a>\n          <p>{event.description}</p>\n        </div>\n      )}\n      <button className=\"detailsBtn\" onClick={() => this.handleShowDetails()}>{!this.state.hideDetails ? \"Show Details\" : \"Hide Details\" }</button>\n    </div>\n    )\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n          )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\n\nclass CitySearch extends Component {\n\n    state = {\n      query: '',\n      suggestions: [],\n      showSuggestions: undefined\n    } \n\n    handleInputChanged = (event) => {\n      const value = event.target.value;\n      const suggestions = this.props.locations.filter((location) => {\n        return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n      });\n      this.setState({ \n        query: value, \n        suggestions\n      });\n    }\n\n    handleItemClicked = (suggestion) => {\n      this.setState({\n        query: suggestion,\n        showSuggestions: false\n      });\n\n      this.props.updateEvents(suggestion);\n    }\n\n  render() { \n    return (\n      <div className=\"CitySearch\">\n        <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onChange={this.handleInputChanged}\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nexport const getAccessToken = async () => {\n\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if(!code) {\n      const results = await axios.get(\n        \"https://fzl82g0umf.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getAccessToken(code);\n  }\n  return accessToken;\n}\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n  .then((res) => res.json())\n  .catch((error) => error.json());\n\n  return result;\n};\n\nexport const removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = \n    window.location.protocol + \"//\" + window.location.host + \n    window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://fzl82g0umf.execute-api.us-east-1.amazonaws.com/dev/api/token/' +\n    encodeCode\n  )\n  .then((res) => {\n    return res.json();\n  })\n  .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  // NProgress.start();\n\n  // if (window.location.href.startsWith('http://localhost')) {\n  //   NProgress.done();\n  // return mockData;\n  // }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://fzl82g0umf.execute-api.us-east-1.amazonaws.com/dev/api/get-events/'\n    + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    eventCount: 2\n  }\n\n  handleNumberChanged = (event) => {\n    const eventCount = event.target.value;\n    this.setState({\n      eventCount,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <label htmlFor=\"NumberofEvent\"></label>\n        <input\n        type=\"number\"\n        name=\"NumberofEvent\"\n        placeholder=\"Enter Number of Events\"\n        className=\"eventNumber\"\n        value={this.state.eventCount}\n        onChange={this.handleNumberChanged}\n        />\n      </div>\n    );\n  }\n\n}\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport { extractLocations, getEvents } from './api';\nimport NumberOfEvents from './NumberOfEvents';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    eventCount: 32\n  }\n\n  updateEvents = (location, eventCount) => {\n    let locationEvents;\n    getEvents().then((events) => {\n      if (location === 'all') {\n        locationEvents = events.slice(0, eventCount);\n      } else {\n        locationEvents = events.filter((event) => event.location === location)\n        .slice(0, eventCount); \n      }\n      this.setState({\n        events: locationEvents,\n        eventCount\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n      this.setState({ events: events.slice(0, this.state.eventCount), locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NumberOfEvents \n        updateEvents={this.updateEvents}\n        eventCount={this.state.eventCount}\n        />\n        <CitySearch \n        locations={this.state.locations} \n        updateEvents={this.updateEvents}\n        eventCount={this.state.eventCount}\n        />\n        <EventList events={this.state.events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}